======= NodejsServer => CLient/admin ========
{
  message : [{str:"",srv:bool}...],
  data : {
    data : "GZIP" / {..},
    args : "GZIP" / {..}
  },
  clients : {
    logged : ["UUID",..],
    connected: ["UUID",..]
  },
  error : bool,
  promptMsg : {str : "", error:bool}, //separate error coming from wrong command by the admin
}
Nota Bene : Don't need to use all field all times, this is only the most complete possibility

====== CLient/Admin => NodejsServer ==========
Msg : {action: sendMessageToUser, message} / {action: sendMessageToRasa, message}
Fetch User Logs : {action: 'fetchUser', json_name}
Fetch JSON data : {action: 'fetchData', json_name}

------ Admin request to action server ------
Admin => NodeJS frame :
{actions:"admin", command="actionName --slot1 val1 --slot2 val2"}

========= NodeJS => SDK ===========
const payload = {
    next_action: nextAction,
    tracker: {
      sender_id: "test_user",
      slots: slot,
      latest_message: {
        text: "blblblblb",
        intent: {
          name: "admin",
          confidence: 0.99
        },
        entities: []
      },
      paused: false,
      events: [],
      active_loop: null,
      latest_action_name: null
    },
    domain: {
      intents: ["admin"],
      entities: [],
      slots: {},
      responses: {},
      actions: [nextAction]
    }
  };
  Nota bene : Only the field actions and slots are needed to modify the others aren't used
